#!/bin/bash

force="$FORCE_INSTALL"
SCRIPTS_PATH="$HOME/.local/dotfiles"

downloads=(
  "https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy;$HOME/.local/bin/diff-so-fancy"
)

clones=(
  "SpaceVim;github.com/SpaceVim/SpaceVim;v1.3.0"
  "fzf;github.com/junegunn/fzf"
)

links=(
  "$SCRIPTS_PATH/tmux.conf;$HOME/.tmux.conf"
  "$SCRIPTS_PATH/zshrc;$HOME/.local/.zshrc"
  "$SCRIPTS_PATH/antigen.zsh;$HOME/.local/.antigen.zsh"
  "$SCRIPTS_PATH/zshenv;$HOME/.zshenv"
  "$SCRIPTS_PATH/SpaceVim.d;$HOME/.local/.SpaceVim.d"
  "$HOME/.local/SpaceVim;$HOME/.local/nvim"
  "$HOME/.local/fzf/bin/fzf;$HOME/.local/bin/fzf"
  "$HOME/.local/fzf/bin/fzf-tmux;$HOME/.local/bin/fzf-tmux"
)

nor=$'\e[0m'
red=$'\e[31m'
grn=$'\e[32m'
yel=$'\e[33m'
blu=$'\e[34m'

make_links() {
  for elem in "${links[@]}"; do
    elem="${elem//;/$'\n'}"
    readarray -t arr <<<"$elem"

    FROM_PATH="${arr[0]}"
    TO_PATH="${arr[1]}"

    [[ ! -e "$FROM_PATH" ]] && echo -e "$FROM_PATH $red(not exists)$nor" && continue
    [[ -z "$force" ]] || rm -f "$TO_PATH"

    printf '%s ' "$TO_PATH"

    [[ -L "$TO_PATH" ]] && echo -e "$grn(already done)$nor" && continue
    [[ -e "$TO_PATH" ]] && echo -e "$red(should be removed first)$nor" && continue

    mkdir -p "${TO_PATH%/*}"
    ln -nfs "$FROM_PATH" "$TO_PATH"
    echo -e "${grn}DONE${nor}"
  done
}

make_clones() {
  for elem in "${clones[@]}"; do
    elem="${elem//;/$'\n'}"
    readarray -t arr <<<"$elem"

    BRAN=
    NAME="${arr[0]}"
    REPO="${arr[1]}"
    DEST="$HOME/.local/$NAME"
    [[ -z "${arr[2]}" ]] || BRAN="--branch ${arr[2]}"

    [[ -z "$force" ]] || rm -rf "$DEST"

    if [[ -e "$DEST" ]]; then
      echo -e "$grn$NAME already installed. Pulling latest changes...$nor"
      git -C $DEST pull
    else
      echo "${yel}Installing \"$NAME\"...$nor"
      git clone --depth=1 $BRAN https://$REPO $DEST
      echo -e "${grn}DONE${nor}"
    fi
  done
}

exec_scripts() {
  $HOME/.local/fzf/install --bin
  chmod u+x $HOME/.local/bin/*
  git config --global core.pager 'diff-so-fancy | less --tabs=4 -RFX'
  git config --global merge.tool vimdiff
  git config --global diff.tool vimdiff
  git config --global mergetool.vimdiff.cmd $'nvim -d $LOCAL $REMOTE $MERGED -c \'$wincmd w\' -c \'wincmd J\''
  git config --global credential.helper "store --file ~/.local/.git-credentials"
}

make_downloads() {
  for elem in "${downloads[@]}"; do
    elem="${elem//;/$'\n'}"
    readarray -t arr <<<"$elem"

    FROM="${arr[0]}"
    DEST="${arr[1]}"

    echo "${grn}Downloading $FROM$nor"
    wget -q -O "$DEST" "$FROM"
  done
}

mkdir -p $HOME/.local/bin

if [[ -d "$SCRIPTS_PATH" ]]; then
    git -C "$SCRIPTS_PATH" pull
else
    git clone https://github.com/imtnez/dotfiles $SCRIPTS_PATH
fi

make_downloads
make_clones
exec_scripts
make_links
